import React, { useState } from "react";
import Head from "next/head";
import toast, { Toaster } from "react-hot-toast";
import Layout from "../../components/Layout";
import styles from "../../styles/SendEmailMdp.module.css";
import axios from "axios";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";

export default function ResetMdp() {
  const { t } = useTranslation("SendEmailMdp");
  const [email, setEmail] = useState("");
  const [showform, setShowForm] = useState(true);
  const [showResultMessage, setShowResultMessage] = useState(false);
  const notify = () => toast.success("Email envoyé avec succès !");

  const handleSubmit = (e) => {
    e.preventDefault();
    axios
      .post("/api/users/reset-password-email", { email })
      .then(() => {
        setShowForm(!showform);
        setShowResultMessage(!showResultMessage);
      })
      .catch(() => {
        toast.error("cet email n'appartient à aucun utilisateur actif");
      });
    notify();
  };
  return (
    <Layout>
      <Head>
        <title> {t("Réinitialisez votre mot de passe")}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {showform && (
          <>
            <h4 className={styles.title}>{t("Réinitialisez votre mot de passe")}</h4>
            <div className={styles.containerGlobal}>
              <div className={styles.forms}>
                <form onSubmit={handleSubmit}>
                  <label className={styles.label}> {t("Entrez votre email :")}</label>
                  <input
                    type="email"
                    name="emailreset"
                    id="emailreset"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    required
                  />
                  <button type="submit" className={styles.button}>
                  {t("Envoyez")}
                  </button>
                </form>
              </div>
            </div>
          </>
        )}
        {showResultMessage && (
          <div className={styles.divMessage}>
            <h2 className={styles.title1}>{t("Vérifier votre boite email")}</h2>
            <span>
              <Toaster position="top-center" reverseOrder={true} />
            </span>
            <p className={styles.paragraphe1}> {t("    Si votre email existe dans notre base de données, vous allez recevoir un email vous expliquant les étapes à suivre pour réinitialiser votre mot de passe.")}
            </p>
            <div className={styles.email}>{email}</div>
            <p className={styles.paragraphe1}>
            {t("  Si vous ne voyez pas l'e-mail, vérifiez dans vos spams")}
            </p>
            <button
              className={styles.button1}
              onClick={() => {
                setShowForm(!showform);
                setShowResultMessage(!showResultMessage);
              }}
            >{t("Je veux un nouveau lien ")}
            </button>
          </div>
        )}
      </main>
    </Layout>
  );
}
export async function getServerSideProps(context) {
  return {
    props: {
      csrfToken: await getCsrfTokenAndSetCookies(context),
      ...(await serverSideTranslations(context.locale, [
        "banner",
        "footer",
        "header",
        "cart",
        "signIn",
        "home",
        "connection",
        "profile",
        "common",
        "NewPassword",
        "SendEmailResetPassword",
        "reservation",
      ])),
    },
  };
}
