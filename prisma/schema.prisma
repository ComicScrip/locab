// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  lastname       String      @db.VarChar(255)
  firstname      String      @db.VarChar(255)
  address        String      @db.VarChar(255)
  zip            String      @db.VarChar(10)
  city           String      @db.VarChar(60)
  email          String      @unique @db.VarChar(100)
  hashedPassword String
  phone          String      @db.VarChar(50)
  role           String      @default("customer")
  orders         Order[]
  cartItems      CartItems[]
}

model PriceCategory {
  id           Int       @id @default(autoincrement())
  name         String    @db.VarChar(255)
  price        String    @db.VarChar(50)
  oneDay       Float
  twoDays      Float
  threeDays    Float
  fourDays     Float
  fiveDays     Float
  sixDays      Float
  sevenDays    Float
  eightDays    Float
  nineDays     Float
  tenDays      Float
  elevenDays   Float
  twelveDays   Float
  thirteenDays Float
  fourteenDays Float
  fifteenDays  Float
  sixteenDays  Float
  products     Product[]
  packs        Pack[]
}

model Pack {
  id                 Int           @id @default(autoincrement())
  name               String        @db.VarChar(255)
  discountPercentage String?       @db.VarChar(50)
  productNumber      String        @db.VarChar(50)
  priceCategoryId    Int
  priceCategory      PriceCategory @relation(fields: [priceCategoryId], references: [id])
}

model CartItems {
  id         Int     @id @default(autoincrement())
  productId  Int
  product    Product @relation(fields: [productId], references: [id])
  customerId Int
  customer   User    @relation(fields: [customerId], references: [id])
  quantity   Int     @default(1)
}

model Order {
  id               Int              @id @default(autoincrement())
  orderNumber      String           @unique @db.VarChar(50)
  startDate        DateTime
  startTime        DateTime
  endDate          DateTime
  orderDate        DateTime         @default(now())
  paymentType      String           @db.VarChar(50)
  paidPrice        Float
  comment          String?          @db.VarChar(255)
  premiseId        Int              @unique
  premise          Premise          @relation(fields: [premiseId], references: [id])
  delegateParentId Int?
  delegateParent   DelegateParent?  @relation(fields: [delegateParentId], references: [id])
  partnerId        Int?             @unique
  partner          Partner?         @relation(fields: [partnerId], references: [id])
  products         ProductOnOrder[]
  status           String           @default("pending")
  customerId       Int
  customer         User             @relation(fields: [customerId], references: [id])
}

model ProductOnOrder {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  quantity  Int     @default(1)

  @@id([productId, orderId])
}

model Reference {
  id              Int       @id @default(autoincrement())
  referenceNumber String    @db.VarChar(50)
  dateOfPurchase  DateTime  @default(now())
  comment         String?   @db.VarChar(255)
  premiseId       Premise[]
  productId       Product[]
  condition       String    @db.VarChar(255)
}

model Product {
  id              Int              @id @default(autoincrement())
  code            String           @db.VarChar(50)
  name            String           @db.VarChar(255)
  brand           String           @db.VarChar(255)
  quantity        String           @db.VarChar(50)
  description     String           @db.VarChar(255)
  priceCategoryId Int
  priceCategory   PriceCategory    @relation(fields: [priceCategoryId], references: [id])
  reference       Reference        @relation(fields: [referenceId], references: [id])
  referenceId     Int
  orders          ProductOnOrder[]
  pictures        ProductPicture[]
  cartItems       CartItems[]
}

model ProductPicture {
  id        Int     @id @default(autoincrement())
  url       String  @db.VarChar(50)
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Premise {
  id          Int       @id @default(autoincrement())
  address     String    @db.VarChar(255)
  zip         String    @db.VarChar(10)
  city        String    @db.VarChar(60)
  premiseType String    @db.VarChar(10)
  orders      Order[]
  reference   Reference @relation(fields: [referenceId], references: [id])
  referenceId Int
}

model DelegateParent {
  id               Int     @id @default(autoincrement())
  lastname         String  @db.VarChar(255)
  firstname        String  @db.VarChar(255)
  city             String  @db.VarChar(60)
  phone            String  @db.VarChar(20)
  email            String  @db.VarChar(100)
  productReference String  @db.VarChar(50)
  orders           Order[]
}

model Partner {
  id          Int     @id @default(autoincrement())
  company     String  @db.VarChar(255)
  city        String  @db.VarChar(60)
  contactName String  @db.VarChar(255)
  phone       String  @db.VarChar(20)
  email       String  @db.VarChar(100)
  orders      Order[]
}
